{"version":3,"sources":["Top.js","App.js","serviceWorker.js","index.js"],"names":["Top","React","Component","App","props","state","active_round","rounds_completed","rounds_remaining","new_members","ext_members","new_member_data","first","last","role","forms","pic","dateJoined","currentMatch","id","ext_member_data","modalStyle","open","setOpen","MeeterModal","name","matchName","matchPic","classes","useStyles","useState","getModalStyle","body","style","className","paper","AvatarGroup","Avatar","alt","src","large","height","Fab","size","onClick","Modal","onClose","aria-labelledby","aria-describedby","this","length","meeting_past","meetingMembers","meeting_future","new_avatars","i","previousCircleString","remainingCircleString","j","matchee","match","console","log","push","Grid","item","Card","variant","CardContent","Typography","component","spacing","ext_avatars","CenteredGrid","rCompleted","rRemaining","container","justify","alignItems","padding","xs","roundStatusCard","memberStatusCard","CardHeader","action","SimpleModal","isNewMember","title","direction","Button","setState","backgroundColor","margin","rand","Math","round","random","top","left","transform","BasicTextFields","root","noValidate","autoComplete","TextField","required","label","helperText","placeholder","fullWidth","InputLabelProps","shrink","BasicTextFieldsForExisting","DatePickers","type","defaultValue","textField","handleOpen","handleClose","document","querySelectorAll","value","lastN","getElementById","date","trim","newMemberToAdd","newMembers","memberData","alert","body_for_existing","existingMemberToAdd","extMembers","extMemberData","makeStyles","theme","border","alight","meetingRowCard","textAlign","color","palette","text","secondary","fontSize","pos","marginBottom","position","width","background","boxShadow","shadows","display","flexWrap","marginLeft","marginRight","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5245c44.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Top extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<p> * Meeter * </p>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Top","import React from 'react';\r\nimport Top from './Top'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './App.css';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport randomColor from 'randomcolor';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      active_round: false,\r\n      rounds_completed: 0,\r\n      rounds_remaining: 0,\r\n      new_members: [0],\r\n      ext_members: [1],\r\n      new_member_data: [{\r\n        first:\"Sample\",\r\n        last:\"User\",\r\n        role:\"Intern\",\r\n        forms:\"\",\r\n        pic:\"https://i.pinimg.com/736x/ae/c4/53/aec453161b2f33ffc6219d8a758307a9.jpg\",\r\n        dateJoined: \"date\",\r\n        currentMatch: 0,\r\n        id: 0\r\n      }],\r\n      ext_member_data: [{\r\n        first:\"Boss\",\r\n        last:\"User\",\r\n        role:\"Manager\",\r\n        forms:\"\",\r\n        pic:\"https://images.theconversation.com/files/350865/original/file-20200803-24-50u91u.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=1200&h=675.0&fit=crop\",\r\n        dateJoined: \"date\",\r\n        currentMatch: 0,\r\n        id: 0\r\n      }],\r\n      modalStyle:\"\",\r\n      open: false,\r\n      setOpen: false\r\n\r\n\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    function MeeterModal({name, pic, matchName, matchPic}) {\r\n      const classes = useStyles();\r\n      // getModalStyle is not a pure function, we roll the style only on the first render\r\n      const [modalStyle] = React.useState(getModalStyle);\r\n      const [open, setOpen] = React.useState(false);\r\n\r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n      const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Meeter Match!</h2>\r\n          <p id=\"simple-modal-description\">\r\n            Match Meeting Details.\r\n\r\n          </p>\r\n          <AvatarGroup>\r\n            <Avatar alt={name[0]} src={pic} className={classes.large}></Avatar>\r\n            <Avatar alt={matchName} src={matchPic} className={classes.large} height=\"1000\"></Avatar>\r\n          </AvatarGroup>\r\n          <p>\r\n            {name} + {matchName}\r\n          </p>\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <Fab size=\"small\" onClick={() => {handleOpen();}}>\r\n            <Avatar alt={name} src={pic}></Avatar>\r\n          </Fab>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    this.state.rounds_remaining = this.state.new_members.length + this.state.ext_members.length - (1 + this.state.rounds_completed);\r\n    var meeting_past = [];\r\n    var meetingMembers = [];\r\n    var meeting_future = [];\r\n\r\n    var new_avatars = [];\r\n    for (var i = 0; i < this.state.new_members.length; i++) {\r\n      var previousCircleString = \"\";\r\n      var remainingCircleString = \"\";\r\n      for (var j = 0; j < this.state.rounds_completed; j++) {\r\n        previousCircleString += \" O   \";\r\n      }\r\n      for (var j = 0; j < this.state.new_members.length + this.state.ext_members.length - (1 + this.state.rounds_completed); j++) {\r\n        remainingCircleString += \" O   \";\r\n      }\r\n      let matchee = this.state.new_member_data[i];\r\n      let match = this.state.ext_member_data[matchee.currentMatch];\r\n      console.log(match);\r\n      new_avatars.push(\r\n        <MeeterModal name={matchee.first} pic={matchee.pic} matchName={match.first} matchPic={match.pic} />\r\n      );\r\n\r\n      if (this.state.rounds_completed != 0) {\r\n        meeting_past.push(\r\n          <Grid item>\r\n            <Card className=\"roundStatusCard\" variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {previousCircleString}\r\n              </Typography>\r\n            </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      }\r\n      meetingMembers.push(\r\n        <Grid item spacing={2}>\r\n        <MeeterModal name={matchee.first} pic={matchee.pic} matchName={match.first} matchPic={match.pic} />\r\n        </Grid>\r\n      );\r\n      if (this.state.rounds_remaining != 0) {\r\n        meeting_future.push(\r\n          <Grid item>\r\n            <Card className=\"roundStatusCard\" variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {remainingCircleString}\r\n              </Typography>\r\n            </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      }\r\n    }\r\n\r\n    var ext_avatars = [];\r\n\r\n    for (var i = 0; i < this.state.ext_members.length; i++) {\r\n      let matchee = this.state.ext_member_data[i];\r\n      let match = this.state.new_member_data[matchee.currentMatch];\r\n      ext_avatars.push(\r\n            <MeeterModal name={matchee.first} pic={matchee.pic} matchName={match.first} matchPic={match.pic} />\r\n      );\r\n    }\r\n\r\n    const CenteredGrid = ({rCompleted, rRemaining}) => (\r\n      <div>\r\n\r\n        <Grid container justify=\"space-evenly\" alignItems=\"stretch\" style={{padding: '24px'}}>\r\n          \r\n          <Grid item xs={3} component={Card} className={useStyles().roundStatusCard} variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                Rounds Completed: {rCompleted}\r\n                <br />\r\n                Rounds Remaining: {rRemaining}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item xs={3} component={Card} className={useStyles().memberStatusCard} variant=\"outlined\">\r\n            <CardHeader\r\n              action={\r\n                <SimpleModal isNewMember={true}/>\r\n              }\r\n              title={\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  New Members\r\n                </Typography>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <AvatarGroup>\r\n                {new_avatars}\r\n              </AvatarGroup>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item xs={3} component={Card} className={useStyles().memberStatusCard} variant=\"outlined\">\r\n            <CardHeader\r\n              action={\r\n                  <SimpleModal/>\r\n              }\r\n              title={\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Existing Members\r\n                </Typography>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <AvatarGroup>\r\n                {ext_avatars}\r\n              </AvatarGroup>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={2} direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n          <Grid container item xs={2} spacing={1} direction=\"column\" justify=\"center\" alignItems=\"flex-end\">\r\n            {meeting_past}\r\n          </Grid>\r\n          <Card className=\"roundStatusCard\" variant=\"outlined\">\r\n            <CardContent>\r\n              <Grid container spacing={4} direction=\"column\" justify=\"center\">\r\n                {meetingMembers}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n          <Grid container item xs={2} spacing={1} direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\r\n            {meeting_future}\r\n          </Grid>\r\n        </Grid> \r\n\r\n        <Grid container item justify=\"center\" alignItems=\"center\">\r\n          <Grid item>\r\n            { this.state.active_round == false && \r\n              <Button onClick={() => { this.setState({active_round: !this.state.active_round})}}\r\n                variant=\"outlined\" style={{backgroundColor: \"#82E0AA\", margin: \"20px\"}} >\r\n                Start Round\r\n              </Button>\r\n            }\r\n            { this.state.active_round == true && \r\n              <Button onClick={() => { this.setState({active_round: !this.state.active_round, rounds_completed: rCompleted+1})}}\r\n                variant=\"outlined\" style={{backgroundColor: \"#f5d36e\", margin: \"20px\"}} >\r\n                Finish Round\r\n              </Button>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n    );\r\n\r\n    function rand() {\r\n      return Math.round(Math.random() * 20) - 10;\r\n    }\r\n\r\n    function getModalStyle() {\r\n      const top = 50 + rand();\r\n      const left = 50 + rand();\r\n\r\n      return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n      };\r\n    }\r\n\r\n    function BasicTextFields() {\r\n\r\n      const classes = useStyles();\r\n      return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField required id=\"standard-required\" className=\"new-member-first\" label=\"Required\" helperText=\"First Name\" placeholder=\"First Name\"/>\r\n          <TextField required  id=\"standard-required\" className=\"new-member-last\" label=\"Required\" helperText=\"Last Name\" placeholder=\"Last Name\"/>\r\n          <TextField className=\"new-member-role\" id=\"standard-basic\" label=\"\" helperText=\"Team Role\"   placeholder=\"Team Role\"/>\r\n          <TextField\r\n          className=\"new-member-forms\"\r\n              id=\"standard-full-width\"\r\n              style={{ margin: 8 }}\r\n              placeholder=\"Enter Link\"\r\n              helperText=\"Google Forms Link\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n            className=\"new-member-pic\"\r\n                id=\"standard-full-width\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter Link\"\r\n                helperText=\"Profile Picture Link\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n        </form>\r\n\r\n      );\r\n    }\r\n\r\n    function BasicTextFieldsForExisting() {\r\n\r\n      const classes = useStyles();\r\n      return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField required id=\"standard-required\" className=\"new-member-first\" label=\"Required\" helperText=\"First Name\" placeholder=\"First Name\"/>\r\n          <TextField required  id=\"standard-required\" className=\"new-member-last\" label=\"Required\" helperText=\"Last Name\" placeholder=\"Last Name\"/>\r\n          <TextField className=\"new-member-role\" id=\"standard-basic\" label=\"\" helperText=\"Team Role\"   placeholder=\"Team Role\"/>\r\n          <TextField\r\n          className=\"new-member-forms\"\r\n              id=\"standard-full-width\"\r\n              style={{ margin: 8 }}\r\n              placeholder=\"Enter Link\"\r\n              helperText=\"Google Forms Link\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n            className=\"new-member-pic\"\r\n                id=\"standard-full-width\"\r\n                style={{ margin: 8 }}\r\n                placeholder=\"Enter Link\"\r\n                helperText=\"Profile Picture Link\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n        </form>\r\n\r\n      );\r\n    }\r\n\r\n    function DatePickers() {\r\n      const classes = useStyles();\r\n      return (\r\n        <form className={classes.container} noValidate>\r\n          <TextField\r\n          className=\"new-member-date\"\r\n            id=\"date\"\r\n            label=\"Join Date\"\r\n            type=\"date\"\r\n            defaultValue=\"yyyy-MM-dd\"\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </form>\r\n      );\r\n    }\r\n\r\n    const SimpleModal= ({isNewMember}) => {\r\n      const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const addNewAndClose = () => {\r\n\r\n\r\n      var first = document.querySelectorAll(\"#standard-required\")[0].value;\r\n      var lastN = document.querySelectorAll(\"#standard-required\")[1].value;\r\n      var role = document.getElementById(\"standard-basic\").value;\r\n      var forms = document.querySelectorAll(\"#standard-full-width\")[0].value;\r\n      var pic = document.querySelectorAll(\"#standard-full-width\")[1].value;\r\n      var date = document.getElementById(\"date\").value;\r\n      if(first.trim() != \"\" && lastN.trim() != \"\"){\r\n       console.log(first, lastN, role, forms, pic, date);\r\n       if(pic.trim() == \"\"){\r\n         pic = \"invalid\";\r\n       }\r\n       var newMemberToAdd = {\r\n         \"first\":first,\r\n         \"last\":lastN,\r\n         \"role\":role,\r\n         \"forms\":forms,\r\n         \"pic\":pic,\r\n         \"dateJoined\": date,\r\n         \"currentMatch\": 0,\r\n         \"id\": this.state.new_members.length-1\r\n       };\r\n       let newMembers = this.state.new_members;\r\n         let last = newMembers[newMembers.length-1];\r\n          newMembers.push(last+2);\r\n          this.setState({new_members: newMembers});\r\n\r\n          let memberData = this.state.new_member_data;\r\n          memberData.push(newMemberToAdd);\r\n          this.setState({new_member_data: memberData});\r\n              setOpen(false);\r\n        }\r\n        else{\r\n          if(first.trim() == \"\" && lastN.trim() == \"\")\r\n            alert(\"First and last name required\");\r\n          else if(first.trim() == \"\")\r\n              alert(\"First name required\");\r\n          else if(lastN.trim() == \"\")\r\n                alert(\"Last name required\");\r\n        }\r\n\r\n    };\r\n\r\n    const addExistingAndClose = () => {\r\n\r\n\r\n      var first = document.querySelectorAll(\"#standard-required\")[0].value;\r\n      var lastN = document.querySelectorAll(\"#standard-required\")[1].value;\r\n      var role = document.getElementById(\"standard-basic\").value;\r\n      var forms = document.querySelectorAll(\"#standard-full-width\")[0].value;\r\n      var pic = document.querySelectorAll(\"#standard-full-width\")[1].value;\r\n      var date = document.getElementById(\"date\").value;\r\n      if(first.trim() != \"\" && lastN.trim() != \"\"){\r\n       console.log(first, lastN, role, forms, pic, date);\r\n       if(pic.trim() == \"\"){\r\n         pic = \"invalid\";\r\n       }\r\n       var existingMemberToAdd = {\r\n         \"first\":first,\r\n         \"last\":lastN,\r\n         \"role\":role,\r\n         \"forms\":forms,\r\n         \"pic\":pic,\r\n         \"dateJoined\": date,\r\n         \"currentMatch\": 0,\r\n         \"id\": this.state.new_members.length-1\r\n       };\r\n       let extMembers = this.state.ext_members;\r\n      let last = extMembers[extMembers.length-1];\r\n      extMembers.push(last+2);\r\n      this.setState({ext_members: extMembers});\r\n\r\n          let extMemberData = this.state.ext_member_data;\r\n          extMemberData.push(existingMemberToAdd);\r\n          this.setState({ext_member_data: extMemberData});\r\n              setOpen(false);\r\n        }\r\n        else{\r\n          if(first.trim() == \"\" && lastN.trim() == \"\")\r\n            alert(\"First and last name required\");\r\n          else if(first.trim() == \"\")\r\n              alert(\"First name required\");\r\n          else if(lastN.trim() == \"\")\r\n                alert(\"Last name required\");\r\n        }\r\n\r\n    };\r\n\r\n    const body = (\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <h2 id=\"simple-modal-title\">New Teammember Form</h2>\r\n        <p id=\"simple-modal-description\">\r\n          Onboard your new member to meeter.\r\n        </p>\r\n        <BasicTextFields/>\r\n        <DatePickers/>\r\n        <button type=\"button\" onClick={addNewAndClose}>\r\n        Add User\r\n        </button>\r\n\r\n      </div>\r\n    );\r\n\r\n    const body_for_existing = (\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <h2 id=\"simple-modal-title\">Existing Team Member Form</h2>\r\n        <p id=\"simple-modal-description\">\r\n          Add your exisiting team member to Meeter.\r\n        </p>\r\n        <BasicTextFieldsForExisting/>\r\n        <DatePickers/>\r\n        <button type=\"button\" onClick={addExistingAndClose}>\r\n        Add User\r\n        </button>\r\n\r\n      </div>\r\n    );\r\n    if(isNewMember){\r\n      return(\r\n        <div>\r\n        <Fab size=\"small\" onClick={() => {handleOpen();\r\n\r\n        }\r\n        }>\r\n          <AddIcon/>\r\n        </Fab>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\">\r\n      {body}\r\n    </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n        <Fab size=\"small\" onClick={() => {handleOpen();\r\n\r\n        }\r\n        }>\r\n          <AddIcon/>\r\n        </Fab>\r\n        <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\">\r\n      {body_for_existing}\r\n    </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n      <div className=\"App\">\r\n        <Top />\r\n        <CenteredGrid rCompleted={this.state.rounds_completed} rRemaining={this.state.rounds_remaining}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  roundStatusCard: {\r\n    backgroundColor:\"#8DC6F6\",\r\n    border: \"1px solid black\"\r\n  },\r\n  memberStatusCard: {\r\n    alight: \"left\",\r\n    backgroundColor:\"#D19BE8\",\r\n    border: \"1px solid black\"\r\n  },\r\n  meetingRowCard: {\r\n    border: \"1px solid black\",\r\n    backgroundColor:\"white\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    }\r\n  },\r\n  rootles: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  container: {\r\n   display: 'flex',\r\n   flexWrap: 'wrap',\r\n },\r\n textField: {\r\n   marginLeft: theme.spacing(1),\r\n   marginRight: theme.spacing(1),\r\n   width: 200,\r\n },\r\n large: {\r\n   width: theme.spacing(15),\r\n   height: theme.spacing(15),\r\n }\r\n}));\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}